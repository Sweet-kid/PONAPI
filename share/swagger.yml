---
swagger: '2.0'
info:
    title: Soylent
    description: It's People!
    version: 0.0.1
host: soylent.booking.com
schemes:
    - http
produces:
    - application/json
paths:
    /{type}:
        get:
            summary: Fetch a collection of resources of a given type
            produces:
                - application/json
            parameters:
                - name: type
                  in: path
                  description: type name to operate on
                  required: true
                  type: string
            responses:
                '200':
                    description: collection of objects of a given type
                    schema:
                        $ref: '#/definitions/DocumentCollection'
    /{type}/{id}:
        get:
            summary: Fetch a resource of a given type
            produces:
                - application/json
            parameters:
                - name: type
                  in: path
                  description: type name to operate on
                  required: true
                  type: string
                - name: id
                  in: path
                  description: id of resource to fetch
                  required: true
                  type: string
            responses:
                '200':
                    description: resource of a given type and ID
                    schema:
                        $ref: '#/definitions/Document'
definitions:
    ResourceID:
        type: object
        required: 
            - type
            - id
        properties:
            type:
                type: string
                description: 'The type of the resource'
            id:
                type: string
                description: 'The ID of the resource'
    Resource:
        allOf:
            - $ref: '#/definitions/ResourceID'
            - additionalProperties:
                attributes:
                    type: object
                    description: 'Set of attributes for a resource'
                relationships:
                    type: object
                    description: 'Set of relationships for a resource'
                meta:
                    type: object
                    description: 'Meta information about the given document'
                links:
                    type: object
                    description: 'A set of related links'
    AbstractDocument:
        type: object
        required:
            - jsonapi
        properties:
            jsonapi:
                type: string
                description: 'The version of the JSONAPI spec we use'
        additionalProperties:
            meta:
                type: object
                description: 'Meta information about the given document'
            errors:
                type: object
                description: 'A list of errors'
            links:
                type: object
                description: 'A set of related links'
    Document:
        allOf:
            - $ref: '#/definitions/AbstractDocument'
            - properties:
                data: 
                    $ref: '#/definitions/Resource'
    DocumentCollection:
        allOf:
            - $ref: '#/definitions/AbstractDocument'
            - properties:
                data: 
                    type: array
                    items:
                        $ref: '#/definitions/Resource'


